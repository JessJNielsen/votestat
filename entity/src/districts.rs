//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "districts")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub district_id: String,
    pub super_district_id: String,
    pub name: String,
    pub link: String,
    pub created_at: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::super_districts::Entity",
        from = "Column::SuperDistrictId",
        to = "super::super_districts::Column::SuperDistrictId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    SuperDistricts,
}

impl Related<super::super_districts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SuperDistricts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
